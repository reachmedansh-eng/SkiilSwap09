@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 184 54% 41%;
    --primary-foreground: 0 0% 100%;
    --secondary: 184 65% 82%;
    --secondary-foreground: 207 67% 33%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 187 26% 60%;
    --accent: 45 87% 69%;
    --accent-foreground: 207 67% 33%;
    --success: 142 76% 36%;
    --success-foreground: 0 0% 100%;
    --warning: 45 87% 69%;
    --warning-foreground: 207 67% 33%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 187 26% 75%;
    --input: 214.3 31.8% 91.4%;
    --ring: 184 54% 41%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222 47% 4%;
    --foreground: 210 40% 98%;
    --card: 222 47% 8%;
    --card-foreground: 210 40% 98%;
    --popover: 222 47% 8%;
    --popover-foreground: 210 40% 98%;
    --primary: 221 83% 53%;
    --primary-foreground: 0 0% 100%;
    --secondary: 262 83% 58%;
    --secondary-foreground: 0 0% 100%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 168 76% 42%;
    --accent-foreground: 0 0% 100%;
    --success: 142 76% 36%;
    --success-foreground: 0 0% 100%;
    --warning: 38 92% 50%;
    --warning-foreground: 0 0% 100%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 221 83% 53%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-comfortaa;
    background-image: 
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 4px,
        hsl(var(--border) / 0.03) 4px,
        hsl(var(--border) / 0.03) 8px
      ),
      repeating-linear-gradient(
        90deg,
        transparent,
        transparent 4px,
        hsl(var(--border) / 0.03) 4px,
        hsl(var(--border) / 0.03) 8px
      );
    image-rendering: pixelated;
  }
  
  h1, h2, h3, h4, h5, h6, button, label {
    @apply font-retropix;
  }
  
  p, span, input, textarea {
    @apply font-comfortaa;
  }
}

@layer utilities {
  .gradient-primary {
    @apply bg-gradient-to-r from-primary to-accent;
  }
  
  .gradient-card {
    @apply bg-gradient-to-br from-card via-card to-muted/20;
  }
  
  .glass {
    @apply bg-card/50 backdrop-blur-xl border border-border/50;
  }
  
  .glow-primary {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  }
  
  .glow-secondary {
    box-shadow: 0 0 20px hsl(var(--accent) / 0.3);
  }
  
  /* Pixelated borders and retro effects */
  .pixel-border {
    border-style: solid;
    border-width: 4px;
    border-image: 
      repeating-linear-gradient(
        90deg,
        hsl(var(--primary)) 0px, 
        hsl(var(--primary)) 4px, 
        transparent 4px, 
        transparent 8px
      ) 4;
    image-rendering: pixelated;
  }
  
  .pixel-corners {
    position: relative;
    clip-path: polygon(
      0 4px, 4px 4px, 4px 0,
      calc(100% - 4px) 0, calc(100% - 4px) 4px, 100% 4px,
      100% calc(100% - 4px), calc(100% - 4px) calc(100% - 4px), 
      calc(100% - 4px) 100%, 4px 100%, 4px calc(100% - 4px), 
      0 calc(100% - 4px)
    );
  }
  
  .pixel-shadow {
    box-shadow: 
      4px 0 0 0 hsl(var(--primary) / 0.3),
      0 4px 0 0 hsl(var(--primary) / 0.3),
      4px 4px 0 0 hsl(var(--primary) / 0.3);
  }
  
  .retro-text {
    text-shadow: 
      2px 2px 0 hsl(var(--accent) / 0.3),
      4px 4px 0 hsl(var(--primary) / 0.2);
  }
  
  .pixel-border-bottom {
    border-bottom-style: solid;
    border-bottom-width: 4px;
    image-rendering: pixelated;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }
  
  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }
  
  @keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 20px hsl(var(--primary) / 0.3); }
    50% { box-shadow: 0 0 40px hsl(var(--primary) / 0.6); }
  }
  
  .animate-glitch {
    animation: glitch 3s infinite;
  }
  
  @keyframes glitch {
    0%, 90%, 100% { transform: translate(0); }
    92% { transform: translate(-2px, 2px); }
    94% { transform: translate(2px, -2px); }
    96% { transform: translate(-2px, -2px); }
    98% { transform: translate(2px, 2px); }
  }
  
  .animate-bounce-pixel {
    animation: bounce-pixel 1s ease infinite;
  }
  
  @keyframes bounce-pixel {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-8px); }
  }
  
  .animate-zoom-pulse {
    animation: zoom-pulse 2s ease-in-out infinite;
  }
  
  @keyframes zoom-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
  }
  
  .retro-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  z-index: 0; /* keep it above body background, below content */
    opacity: 0.22; /* slightly stronger so it shows on light backgrounds */
    mix-blend-mode: multiply; /* helps colors sit on light backgrounds */
    pointer-events: none;
  }
  
  .pixel-float {
    animation: pixel-float 3s ease-in-out infinite;
  }
  
  @keyframes pixel-float {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(10px, -10px) rotate(5deg); }
    50% { transform: translate(0, -20px) rotate(0deg); }
    75% { transform: translate(-10px, -10px) rotate(-5deg); }
  }
}

